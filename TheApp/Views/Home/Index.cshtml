<div id="SiteContent">
    @{
        ViewData["Title"] = "tHEaPP";
    }

    @{
        if((int)ViewData["FirstLoad"] == 0)
        {
            Layout = "";
        }
    }
    <div class="text-center">
        <h1 class="display-4">Welcome to tHEaPP</h1>
    </div>

    <br /><br />

    @*@await Component.InvokeAsync("TopArtists")*@

    <style>
        /* Custom styles for the carousel */
        #artistsCarousel {
            background-color: #333; /* Dark background color */
        }

        .carousel-inner {
            border-radius: 10px; /* Rounded corners for the carousel */
        }

        .carousel-item {
            text-align: center;
            color: #fff; /* Text color */
        }

            .carousel-item img {
                border-radius: 10px; /* Rounded corners for the images */
            }

        .carousel-caption {
            background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black background for captions */
            border-radius: 10px; /* Rounded corners for the captions */
        }

        .carousel-control-prev-icon,
        .carousel-control-next-icon {
            background-color: #fff; /* Arrow color */
        }

        .carousel-control-prev,
        .carousel-control-next {
            filter: invert(1); /* Invert arrow colors for better visibility */
        }
    </style>

    <div class="container mt-5">
        <h2 class="text-center mb-4 text-dark">Top Ten Artists</h2>
        <p>User# @ViewData["UserID"] logged in.</p>
        <div id="artistsCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                <!-- Replace the content below with your actual data -->
                <div class="carousel-item active">
                    <img src="https://via.placeholder.com/800x400" class="d-block w-100" alt="Artist 1">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Artist 1</h5>
                        <p>Description for Artist 1.</p>
                    </div>
                </div>
                <div class="carousel-item">
                    <img src="https://via.placeholder.com/800x400" class="d-block w-100" alt="Artist 2">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Artist 2</h5>
                        <p>Description for Artist 2.</p>
                    </div>
                </div>
                <!-- Add more carousel items as needed -->
            </div>

            <!-- Carousel Navigation Arrows -->
            <button class="carousel-control-prev" type="button" data-bs-target="#artistsCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#artistsCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>

    <div class="tab-container">
        <div class="tab-buttons">
            <div class="tab-button active" onclick="openTab('tab1')">Choose By Map</div>
            <div class="tab-button" onclick="openTab('tab2')">Choose By Genre</div>
        </div>
        <div class="tab-content active" id="tab1">

            <div class="map-container">

            <div id="map" class="jvmap-smart"></div>

            </div>
            </div>
           
        <div class="tab-content" id="tab2">
            <h2>Genre List</h2>
            <p>Good Music and the back up dancers.</p>
        </div>
    </div>

    <script>
        function openTab(tabId) {
            // Hide all tab content
            var tabContents = document.querySelectorAll('.tab-content');
            tabContents.forEach(function (content) {
                content.classList.remove('active');
            });

            // Remove active class from all tabs
            var tabButtons = document.querySelectorAll('.tab-button');
            tabButtons.forEach(function (button) {
                button.classList.remove('active');
            });

            // Show the selected tab content
            document.getElementById(tabId).classList.add('active');

            // Add active class to the clicked tab button
            event.currentTarget.classList.add('active');
        }

        function openNestedTab(tabId) {
            // Hide all nested tab content
            var nestedTabContents = document.querySelectorAll('.nested-tab-container .tab-content');
            nestedTabContents.forEach(function (content) {
                content.classList.remove('active');
            });

            // Remove active class from all nested tabs
            var nestedTabButtons = document.querySelectorAll('.nested-tab-container .tab-button');
            nestedTabButtons.forEach(function (button) {
                button.classList.remove('active');
            });

            // Show the selected nested tab content
            document.getElementById(tabId).classList.add('active');

            // Add active class to the clicked nested tab button
            event.currentTarget.classList.add('active');
        }
    </script>

    <script>
        $(function () {
            var palette = ['#000000', '#948D8D', '#F3ECEC', '#CDCDCD', '#867F7F'];
            generateColors = function () {
                var colors = {},
                    key;

                for (key in map.regions) {
                    colors[key] = palette[Math.floor(Math.random() * palette.length)];
                }
                return colors;
            },
                map;

            map = new jvm.Map({
                map: 'us_lcc',
                container: $('#map'),
                series: {
                    regions: [{
                        attribute: 'fill'
                    }]
                },
                onRegionClick: function (event, code) {
                    $.ajax({
                        url: '/Home/State',
                        type: 'POST',
                        data: { stateCode: code },
                        success: function (response) {
                            var map = $('#map').vectorMap('get', 'mapObject');
                            map.tip.hide();
                            $('#SiteContent').html(response);

                        },
                        error: function (xhr, status, error) {
                            console.log(xhr.responseText);
                            alert('Error making AJAX call.');
                        }
                    });


                }

            });
            map.series.regions[0].setValues(generateColors());
            $('#update').click(function (e) {
                e.preventDefault();
                map.series.regions[0].setValues(generateColors());
            });
        });
    </script>

    @*<p>@ViewData["path"]</p>*@
    
</div>